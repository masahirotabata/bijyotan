# --- PostgreSQL (Render) ---
spring.datasource.url=${JDBC_DATABASE_URL:jdbc:postgresql://dpg-d2pf8dbe5dus73b2tro0-a.oregon-postgres.render.com:5432/bijyotan_dev?sslmode=require}
spring.datasource.username=bijyotan_dev_user
spring.datasource.password=KjUcJPgmdbb3vEEV01xBnklJr9K6V9gr
spring.datasource.driverClassName=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update

# コネクションプールを抑制（無料枠向け）
spring.datasource.hikari.maximum-pool-size=5

# 初期データ(data.sql)を使わない場合
spring.sql.init.mode=never

# H2 console は本番で無効
spring.h2.console.enabled=false

# ログは控えめに
logging.level.org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping=INFO
logging.level.org.springframework.web.servlet.DispatcherServlet=INFO

# --- Common ---
spring.application.name=spring-vocabulary

# .env を任意で取り込む
spring.config.import=optional:file:.env[.properties]

# Spring Batch 無効化
spring.batch.enabled=false
spring.batch.job.enabled=false

# ログ（必要に応じて INFO/DEBUG に調整）
logging.level.org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping=INFO
logging.level.org.springframework.web.servlet.DispatcherServlet=INFO

# --- Stripe（環境変数から取得）---
stripe.secret-key=${STRIPE_SECRET_KEY:}
stripe.publishable-key=${STRIPE_PUBLISHABLE_KEY:}
stripe.webhook-secret=${STRIPE_WEBHOOK_SECRET:}
stripe.price-id=${STRIPE_PRICE_ID:}
stripe.success-url=${STRIPE_SUCCESS_URL:https://example.com/premium/success?session_id={CHECKOUT_SESSION_ID}}
stripe.cancel-url=${STRIPE_CANCEL_URL:https://example.com/premium/cancel}

# --- Mail（環境変数から取得）---
spring.mail.host=${SPRING_MAIL_HOST:}
spring.mail.port=${SPRING_MAIL_PORT:}
spring.mail.username=${SPRING_MAIL_USERNAME:}
spring.mail.password=${SPRING_MAIL_PASSWORD:}
spring.mail.properties.mail.smtp.auth=${SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH:true}
spring.mail.properties.mail.smtp.starttls.enable=${SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE:true}
