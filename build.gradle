plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'application'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

tasks.withType(JavaCompile) {
    options.compilerArgs += ['-parameters']
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-mail'   // ← これ1回だけでOK
  implementation "org.springframework.boot:spring-boot-starter-websocket"
  implementation "org.springframework:spring-messaging"
  // もしセキュリティ未設定なら一旦外してもOK（入れるなら後述のpermitAll設定を）
  // implementation "org.springframework.boot:spring-boot-starter-security"

  implementation 'com.stripe:stripe-java:24.9.0'
  implementation 'net.coobird:thumbnailator:0.4.20'
  implementation 'org.apache.commons:commons-csv:1.10.0'
  implementation 'com.google.code.gson:gson:2.10.1'

  compileOnly 'org.projectlombok:lombok'
  annotationProcessor 'org.projectlombok:lombok'

  runtimeOnly 'com.h2database:h2'

  developmentOnly 'org.springframework.boot:spring-boot-devtools'

  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.springframework.batch:spring-batch-test'
  testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

application {
    mainClassName = 'com.example.demo.BijotanVocabularyApplication'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.named('bootJar') {
    archiveFileName = 'app.jar'
}
